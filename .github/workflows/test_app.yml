name: Check Application

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: testautotrips
          POSTGRES_USER: testautotrips
          POSTGRES_PASSWORD: testautotrips
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.5'
          cache: 'pip'

      - name: Load cached Poetry installation
        uses: actions/cache@v3
        with:
          path: ~/.local
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Load cached dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-py-${{ hashFiles('**/poetry.lock') }}

      - name: Create .env file
        run: |
          echo "DATABASE_NAME=testautotrips" > .env
          echo "DATABASE_USER=testautotrips" >> .env
          echo "DATABASE_PASSWORD=testautotrips" >> .env
          echo "DATABASE_HOST=localhost" >> .env
          echo "DATABASE_PORT=5432" >> .env
          echo "SECRET_KEY=estautotrips" >> .env

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction

      - name: Run linting checks
        run: |
          poetry run ruff check .
          poetry run mypy .

      - name: Run migrations
        run: poetry run python src/manage.py migrate

      - name: Run application
        run: poetry run python src/manage.py runserver 0.0.0.0:8000 &
        env:
          DATABASE_URL: postgres://testautotrips:testautotrips@localhost:5432/testautotrips

      - name: Wait for application to start
        run: |
          timeout 120 bash -c 'until curl -s http://localhost:8000 > /dev/null; do sleep 1; done'

      - name: Check application status
        run: |
          curl -I http://localhost:8000