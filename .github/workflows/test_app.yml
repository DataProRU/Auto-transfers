name: Check Application

on: [push, pull_request]

jobs:
  check:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: testautotrips
          POSTGRES_USER: testautotrips
          POSTGRES_PASSWORD: testautotrips
        ports:
          - "5432:5432"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.5'

      - name: Install Poetry
        run: pip install poetry

      - name: Create creds
        run: |
          echo '{
            "type": "service_account",
            "project_id": "${{ secrets.PROJECT_ID }}",
            "private_key_id": "${{ secrets.PRIVATE_KEY_ID }}",
            "private_key": "${{ secrets.PRIVATE_KEY }}",
            "client_email": "${{ secrets.CLIENT_EMAIL }}",
            "client_id": "${{ secrets.CLIENT_ID }}",
            "auth_uri": "${{ secrets.AUTH_URI }}",
            "token_uri": "${{ secrets.TOKEN_URI }}",
            "auth_provider_x509_cert_url": "${{ secrets.AUTH_PROVIDER_CERT_URL }}",
            "client_x509_cert_url": "${{ secrets.CLIENT_CERT_URL }}",
            "universe_domain": "${{ secrets.UNIVERSE_DOMAIN }}"
          }' > credentials.json

      - name: Create .env file
        run: |
          echo "DATABASE_NAME=testautotrips" > .env
          echo "DATABASE_USER=testautotrips" >> .env
          echo "DATABASE_PASSWORD=testautotrips" >> .env
          echo "DATABASE_HOST=localhost" >> .env
          echo "DATABASE_PORT=5432" >> .env
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "SECRET_KEY=testautotrips" >> .env
          echo "TABLE_ID=${{ secrets.TABLE_ID }}" >> .env
          echo "TABLE_CREDS=credentials.json" >> .env
          echo "VINS_WORKSHEET=База VIN" >> .env

      - name: Install dependencies
        run: poetry install

      - name: Run migrations
        run: poetry run python src/manage.py migrate

      - name: Run application
        run: poetry run python src/manage.py runserver 0.0.0.0:8000 &
        env:
          DATABASE_URL: postgres://testautotrips:testautotrips@localhost:5432/testautotrips

      - name: Wait for application to start
        run: |
          timeout 120 bash -c 'until curl -s http://localhost:8000 > /dev/null; do sleep 1; done'

      - name: Check application status
        run: |
          curl -I http://localhost:8000