name: Production Deployment

on: 
    workflow_run:
      workflows: ["Check Application"]
      branches: [master]
      types:
        - completed
    workflow_dispatch:

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Add SSH Known Hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts

      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy Application
        run: |
            ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} << 'DEPLOY_SCRIPT'
            set -eo pipefail  # Exit immediately on any error
            export PATH="$HOME/.local/bin:$PATH"
        
            echo "📂 Entering project directory..."
            cd Auto-transfers || {
              echo "❌ Failed to enter project directory"
              exit 1
            }
        
            echo "🔄 Updating codebase..."
            git pull origin master || {
              echo "❌ Git pull failed"
              exit 1
            }
        
            echo "📦 Installing production dependencies..."
            poetry install --no-root --no-interaction || {
              echo "❌ Dependency installation failed"
              exit 1 
            }

            echo "💾 Running migrations..."
            poetry run python src/manage.py migrate --no-input || {
              echo "❌ Migration failed"
              exit 1
            }
        
            echo "🖼️  Collecting static files..."
            poetry run python src/manage.py collectstatic --noinput || {
              echo "❌ Static file collection failed"
              exit 1
            }
        
            echo "🔄 Restarting services..."
            sudo systemctl restart gunicorn telebot nginx || {
              echo "❌ Service restart failed"
              exit 1
            }
        
            echo "✅ Deployment completed successfully!"
            DEPLOY_SCRIPT

      - name: Verify Deployment
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "
            for i in {1..5}; do
              curl -sSf http://localhost:8000/api/v1/docs/ && exit 0
              sleep 5
            done
            exit 1
          "      