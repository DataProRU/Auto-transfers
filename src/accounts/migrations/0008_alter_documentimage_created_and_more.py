# Generated by Django 5.1.7 on 2025-08-24 13:05

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0007_alter_user_role"),
    ]

    operations = [
        migrations.AlterField(
            model_name="documentimage",
            name="created",
            field=models.DateTimeField(
                default=django.utils.timezone.now, verbose_name="Created"
            ),
        ),
        migrations.AlterField(
            model_name="documentimage",
            name="image",
            field=models.ImageField(
                upload_to="documents/%Y/%m/%d/", verbose_name="Image"
            ),
        ),
        migrations.AlterField(
            model_name="documentimage",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="documents",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="address",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Address"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="company",
            field=models.CharField(
                blank=True, max_length=255, null=True, verbose_name="Company"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="full_name",
            field=models.CharField(max_length=255, verbose_name="Full name"),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_approved",
            field=models.BooleanField(default=False, verbose_name="Is approved"),
        ),
        migrations.AlterField(
            model_name="user",
            name="is_onboarded",
            field=models.BooleanField(default=False, verbose_name="Is onboarded"),
        ),
        migrations.AlterField(
            model_name="user",
            name="phone",
            field=models.CharField(max_length=15, unique=True, verbose_name="Phone"),
        ),
        migrations.AlterField(
            model_name="user",
            name="role",
            field=models.CharField(
                choices=[
                    ("admin", "Admin"),
                    ("manager", "Manager"),
                    ("user", "User"),
                    ("client", "Client"),
                    ("logistician", "Logistician"),
                    ("opening_manager", "Opening manager"),
                    ("title", "Title"),
                    ("inspector", "Inspector"),
                    ("re_export", "Re-Export"),
                ],
                default="user",
                max_length=15,
                verbose_name="Role",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="telegram",
            field=models.CharField(
                blank=True,
                max_length=32,
                null=True,
                unique=True,
                verbose_name="Telegram",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="tg_user_id",
            field=models.BigIntegerField(
                blank=True, null=True, unique=True, verbose_name="Telegram user ID"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                blank=True,
                error_messages={"unique": "A user with that username already exists."},
                help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                max_length=150,
                null=True,
                unique=True,
                validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                verbose_name="Username",
            ),
        ),
    ]
