"""–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã c Telegram –±–æ—Ç–æ–º."""

import asyncio
import logging
from typing import Any

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode

from bot.config import ADMIN_GROUP_ID, ADMIN_URL, BOT_TOKEN
from bot.handlers import register_handlers
from bot.keyboards import get_registration_keyboard

logger = logging.getLogger(__name__)

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()


async def send_registration_notification(user_data: dict[str, Any]) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ o —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–¥–º–∏–Ω –≥—Ä—É–ø–ø—É.

    Args:
        user_data: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏.

    """
    try:
        message_text = (
            f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!\n\n"
            f"üë§ –§–ò–û: {user_data['full_name']}\n"
            f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_data['phone']}\n"
            f"üìß Telegram: {user_data['telegram']}\n"
            f"üîó –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å: {ADMIN_URL}"
        )

        keyboard = get_registration_keyboard(user_data["id"])

        await bot.send_message(
            chat_id=ADMIN_GROUP_ID,
            text=message_text,
            reply_markup=keyboard,
        )
        logger.info("Registration notification sent successfully")
    except Exception:
        logger.exception("Error while sending registration notification")
        raise


async def start_bot() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ."""
    try:
        register_handlers(dp)
        await dp.start_polling(bot)
    except Exception:
        logger.exception("Error while starting bot")
        raise


def run_bot() -> None:
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –≤ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ."""
    asyncio.run(start_bot())
